"use strict";
/*
    app.js, main Angular application script
    define your module and controllers here
*/

var commentsUrl = 'https://api.parse.com/1/classes/comments';

angular.module('CommentsStorage', ['ui.bootstrap'])
    .config(function($httpProvider) {
        //Parse required two extra headers sent with every HTTP request: X-Parse-Application-Id, X-Parse-REST-API-Key
        //the first needs to be set to your application's ID value
        //the second needs to be set to your application's REST API key
        //both of these are generated by Parse when you create your application via their web site
        //the following lines will add these as default headers so that they are sent with every
        //HTTP request we make in this application
        $httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'saZhsWHFTbYLB8tiF5jPoRTQDIAOGnErRzKCDGRb';
        $httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = 'blQPuhbCtiL9kK3j8uLm1bSMAaquR2SRznExVucG';
    })

    .controller('CommentsController', function($scope, $http) {
        $scope.refreshComments = function() {
            $scope.loading = true;
            $http.get(commentsUrl + '?order=-votes').success(function(data) {
            	$scope.comments = data.results;
            //    if ($scope.comments.length == 0){
            //            $scope.specialMessage = "no comments yet. Be the first to review this!";
            //        }
            }).error(function(err) {
                $scope.errorMessage = err;
            }).finally(function() {
                $scope.loading = false;
            });
        };

    $scope.refreshComments();

    $scope.newComment = {done: false};

  	$scope.addComment = function() {
        $scope.inserting = true;
        $http.post(commentsUrl, $scope.newComment)
            .success(function(responseData) {
                $scope.newComment.objectId = responseData.objectId;
                $scope.comments.push($scope.newComment);

            })
            .finally(function() {
                $scope.inserting = false;
            });
    };

	$scope.updateComment = function(comment) {
		$scope.updating = true;
        $http.put(commentsUrl + '/' + comment.objectId, comment).success(function() {

        }).error(function(err) {
            $scope.errorMessage = err;
        }).finally(function() {
            $scope.updating = false;
        });
    };

   	$scope.incrementVotes = function(comment, amount) {
   		if (comment.votes <= 0 && amount < 0) {
            return;
        }
        
        $scope.updating = true;
        var postData = {
            votes: {
                __op: "Increment",
                amount: amount
            }
        };

        $http.put(commentsUrl + '/' + comment.objectId, postData)
            .success(function(respData) {
                comment.votes = respData.votes;
            }).error(function(err) {
                console.log(err);
            }).finally(function() {
                $scope.updating = false;
            });
    };

 $scope.deleteComment = function(comment) {
            
                $scope.updating = true;
                $http.delete(commentsUrl + '/' + comment.objectId)
                    .finally(function () {
                        $scope.refreshComments();
                        $scope.updating = false;
                    })

        };

    });
